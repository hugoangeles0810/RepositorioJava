<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    
    <bean id="QuartzService" class="com.diarioru.servicios.QuartzService"/>
        
    <!--CREAMOS LA TAREA-->
    <bean id="trabajoProgramado" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!--Se decimos que bean va a contener mis JOBs-->
        <property name="targetObject" ref="QuartzService" />
        <!--Convertimos el metodo en un JOB-->
        <property name="targetMethod" value="MensajeProgramado" />
        <!--Crear hilos distintos para cada JOB-->
        <property name="concurrent" value="false" />
    </bean>
	
    <!--CREAMOS EL TRIGUER-->    
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="trabajoProgramado" />
        <!--Le asignamos el tiempo de los JOBS (Segundo* Minuto* Hora* Dia* Semana* Mes* DiaAÃ±o* SemanaAÃ±o* A*)-->
        <property name="cronExpression" value="0,10,20,30,40,50 * * * * ?" />
    </bean>

    <!--CREAMOS EL SCHEDULER (PLANIFICADOR)-->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!--Agregamos los triggers al planificador-->
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>       
        <property name="quartzProperties">
            <props>
                <!--Hace que evite la verificacion de los cambios triggers en memoria-->
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>                                              
            </props>
        </property>
    </bean>

</beans>